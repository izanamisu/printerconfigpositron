##############################################################################################################################
#                                               LED Config
##############################################################################################################################
[neopixel bedlight]                                                                   # LED Type + LED BAR NAME
pin: PA8                                                                              # Pin config of this LED BAR
chain_count:8                                                                         # Ammount of leds in this LED BAR

##############################################################################################################################
#                                               LED Effect Config
##############################################################################################################################
# Functions: name, autoStart, runOnShutown, heater, analogPin, stepper, configLayers, configLeds
# 
##############################################################################################################################

##############################################################################################################################
#                                               LED Effect layers
##############################################################################################################################
# Effects :  layerStatic, layerBreathing, layerBlink, layerTwinkle, layerStrobe, layerComet,  layerChase, 
#            layerGradient, layerHeater, layerAnalogPin, layerStepper, layerFire, layerHeaterFire, layerProgress
# 
# Effects input variable: handler, frameHandler, ledCount, paletteColors, effectRate, effectCutoff, frameRate, 
#                          blendingMode, frameNumber, thisFrame, frameCount, lastAnalog
# 
# Layer Effect location:  top, bottom, add, subtract, difference, average, multiply, divide, screen, lighten, darken, overlay
# 
# Effect command example: Effect name + effect input variables + layer Effect location + Effect Variables
# 
# Individual effects inherit from the LED Effect Base class
# each effect must support the nextFrame() method either by
# using the method from the base class or overriding it.
# LED Effect Base class input variables used by effect
# 
#Each layer is defined with the following parameters
# Layer name, Effect Rate, Cutoff, Blending mode, Color palette
# 
# Solid color     : ledCount, paletteColors
# Breathing  : ledCount, paletteColors, frameRate, effectRate
# Blink      : ledCount, paletteColors, frameRate, effectRate
# Twinkle    : ledCount, paletteColors, effectRate, effectCutoff
# Strobe     : ledCount, paletteColors, frameRate, effectRate, effectCutoff
# Comet      : ledCount, paletteColors, effectRate, effectCutoff
# Chase
# Gradient
# Heater
# AnalogPin
# Stepper
# Fire
# HeaterFire
# Progress
# blendingModes  = 
#            'top'       : (lambda t, b: t ),
#            'bottom'    : (lambda t, b: b ),
#            'add'       : (lambda t, b: t + b ),
#            'subtract'  : (lambda t, b: (t - b) * (t - b > 0)),
#            'difference': (lambda t, b: (t - b) * (t > b) + (b - t) * (t <= b)),
#            'average'   : (lambda t, b: 0.5 * (t + b)),
#            'multiply'  : (lambda t, b: t * b),
#            'divide'    : (lambda t, b: t / b if b > 0 else 0 ),
#            'screen'    : (lambda t, b: 1.0 - (1.0-t)*(1.0-b) ),
#            'lighten'   : (lambda t, b: t * (t > b) +  b * (t <= b)),
#            'darken'    : (lambda t, b: t * (t < b) +  b * (t >= b)),
#            'overlay'   : (lambda t, b: \
# 
# Rainbow    (1.0, 0.0, 0.0),(0.0, 1.0, 0.0),(0.0, 0.0, 1.0)
# Fire       (0.0, 0.0, 0.0),(1.0, 0.0, 0.0),(1.0, 1.0, 0.0),(1.0, 1.0, 1.0)
# Blue Comet (0.8, 1.0, 1.0),(0.0, 0.8, 1.0),(0.0, 0.0, 1.0)
##############################################################################################################################

[led_effect static]
leds:       neopixel:bedlight 
autostart:  false
#frame_rate: 0
#effectRate: 0
#Cutoff:     0
#Palette:    Rainbow

layers:
   static     1 0  bottom (1,.1,0), (1,.1,0), (1,.1,0), (1,1,0)

[led_effect static2]
leds:       neopixel:bedlight (1-3)
autostart:  false
#frame_rate: 0
#effectRate: 0
#Cutoff:     0
#Palette:    Rainbow

layers:
   static  0  0 top    (0,0,0)

[led_effect breathing]
leds:       neopixel:bedlight (4-6) 
autostart:  false
#frame_rate: 3
#effectRate: 3
#Cutoff:     0
#Palette:    Rainbow

layers:
   breathing      2  0     top    (0.95, 0.0, 0.0)




# Static
# Effect Rate:  Not used but must be provided
# Cutoff:       Not used but must be provided
# Palette:      Colors are blended evenly across the strip
# A single color is displayed and it does not change. If a palette of multiple colors is provided, colors will be evenly blended along the LEDs based on difference in hue.
# 
# Breathing
# Effect Rate:  3   Duration of a complete cylce
# Cutoff:       0   Not used but must be provided
# Palette:          Colors are cycled in order
# Colors fade in and out. If a palette of multiple colors is provided, it will cycle through those colors in the order they are specified in the palette. The effect speed parameter controls how long it takes to "breathe" one time.
# 
# Blink
# Effect Rate:  1   Duration of a complete cylce
# Cutoff:       0   Not used but must be provided
# Palette:          Colors are cycled in order
# LEDs are turned fully on and fully off based on the effect speed. If a palette of multiple colors is provided, it will cycle through those colors in order.
# 
# Strobe
# Effect Rate:  1   Number of times per second to strobe
# Cutoff:       1.5 Determines decay rate. A higher number yields quicker decay
# Palette:          Colors are cycled in order
# LEDs are turned fully on and then faded out over time with a decay. If a palette of multiple colors is provided, it will cycle through those colors in order. The effect rate controls how many times per second the lights will strobe. The cutoff parameter controls the decay rate. A good decay rate is 1.5.
# 
# Twinkle
# Effect Rate:  1   Increases the probability that an LED will illuminate.
# Cutoff:       .25 Determines decay rate. A higher number yields quicker decay
# Palette:          Random color chosen
# Random flashes of light with decay along a strip. If a palette is specified, a random color is chosen from the palette.
# 
# Gradient
# Effect Rate:  1   How fast to cycle through the gradient
# Cutoff:       0   Not used but must be provided
# Palette:          Linear gradient with even spacing.
# Colors from the palette are blended into a linear gradient across the length of the strip. The effect rate parameter controls the speed at which the colors are cycled through. A negative value for the effect rate changes the direction the gradient cycles (right to left vs left to right)
# 
# Comet
# Effect Rate:  1   How fast the comet moves, negative values change direction
# Cutoff:       1   Length of tail (somewhat arbitrary)
# Palette:          Color of "head" and gradient of "tail"
# A light moves through the LEDs with a decay trail. Direction can be controlled by using a negative effect rate value. The palette colors determine the color of the comet and the tail. The first color of the palette defines the color of the "head" of the comet and the remaining colors are blended into the "tail"
# 
# Chase
# Effect Rate:  1   How fast the comet moves, negative values change direction
# Cutoff:       1   Length of tail (somewhat arbitrary)
# Palette:          Color of "head" and gradient of "tail"
# Identical settings as Comet, but with multiple lights chasing each other.
# 
# Heater
# Effect Rate:  1   Minimum temperature to activate effect
# Cutoff:       0   Disable effect once temp is reached
# Palette:          Color values to blend from Cold to Hot
# This effect becomes active when the specified heater is active or the temperature is greater than the minimum specified temperature. For instance, if a heater is turned on and set to a target temperature, the LEDs will cycle through the gradient colors until the target temperature is met. Once it has been met, the last color of the gradient is used and the effect is essentially a static color until the. Heater state changes. If the cutoff parameter is supplied, the effect will be disabled once the targe temperature is met. If the heater is turned off, the colors will follow this pattern in reverse until the temperature falls below the minimum temperature specified in the config. This can be used to indicate the hotend or bed is in a safe state to touch.
# 
# Fire
# Effect Rate:  45  Probability of "sparking"
# Cutoff:       40  Rate of "cooling"
# Palette:          Color values to blend from "Cold" to "Hot"
# The FastLED library for Arduino has a sample sketch called Fire2012WithPalette included with it. This effect is a port of that sketch. It simulates a flame by "sparking" an LED. The "heat" from that LED travels down the length of the LEDs where it gradually cools. A higher rate of sparking causes a greater amount of heat to accumulate at the base of the strip resulting a more intense flame. Changing the rate of cooling results in longer or shorter overall flames.
# 
# HeaterFire
# Effect Rate:  1  Minimum temperature to activate effect
# Cutoff:       0   Disable effect once temp is reached
# Palette:          Color values to blend from "Cold" to "Hot"
# The fire effect but responsive to the temperature of the specified heater. The flame starts as a small ember and increases in intensity as the heater's target temperature is reached. If the cutoff parameter is set to 1, the effect will be disabled once the target temperature is reached, otherwise it will stay active until the heater is disabled.
# 
# AnalogPin
# Effect Rate:  10  Multiplier for input signal
# Cutoff:       40  Minimum threshold to trigger effect
# Palette:          Color values to blend
# This effect uses the value read from an analog pin to determine the color. If multiple colors are specified in the palette, it chooses one based on the value of the pin. If only one color is specified, the brightness is proportional to the pin value. An example usage would be attaching an analog potentiometer that controls the brightness of an LED strip. Internally, input voltage is measured as a percentage of voltage vs aref. Another use could be to attach the RPM wire from a fan if the fan has a tachometer. It must be used with care as too much current or too high a voltage can damage a pin or destroy a controller board.
# 
# Stepper
# Effect Rate:  4   Number of trailing LEDs
# Cutoff:       4   Number of leading LEDs
# Palette:          Color values to blend
# The position of the specified stepper motor is represented by the first color in the palette. The remaining colors in the gradient are blended and mirrored on either side. As the stepper position changes relative to the axis length, the lights move up and down the strip. It should be noted that the effect itself updates stepper position every half second based on the reported position of the stepper similar to the GET_POSITION gcode command. It will not be realtime. A neagive value in effect rate will fill the entire strip leading up to the stepper postion, a negative value in cutoff will fill the entire strip after the stepper position.
# 
# Progress
# Effect Rate:  4   Number of trailing LEDs
# Cutoff:       4   Number of leading LEDs
# Palette:          Color values to blend